#!/bin/bash
set -e

tmpexit=()
function rmexit {
    tmpexit+=($1)
    local tmps="${tmpexit[@]}"
    trap "rm $tmps" EXIT
}

function put {
    cat > "$1"
    echo "$1"
    echo "created $1" >&2
}
export -f put

cols=""

while [ $# -gt 0 ]; do
    case $1 in
        -z) archive=$2 && shift 2;;
        -o) prefix=$2 && shift 2;;
        -N) lines=$2 && shift 2;;
        -k) cols=$2 && shift 2;;
        *)  break;;
    esac
done

# replace stdin with file if provided
[ -z $1 ] || exec 0< $1

# decompress if necessary
if [ ! -z $archive ]; then
    json=$(mktemp -u)
    mkfifo "$json"
    rmexit "$json"
    case $archive in
        xz)  xzcat | tee -a $json >/dev/null & ;;
        bz2) pbzip2 -d -c | tee -a $json >/dev/null & ;;
    esac
    exec 0< $json
fi

# convert objects to table
csv=$(mktemp -u)
mkfifo $csv
rmexit $csv
json2csv -k "$cols" -p | tee -a $csv >/dev/null &
exec 0< $csv

# fallback to a temporary directory
[ -z $prefix ] && prefix=$(mktemp)

# split and output file names
if [ ! -z $lines ]; then
    out="$prefix.{#}.csv"
    cat | parallel --line-buffer --header : --pipe -N "$lines" put $out
else
    put $prefix
fi
